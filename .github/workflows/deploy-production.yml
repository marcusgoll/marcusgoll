name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.PUBLIC_URL }}
          NODE_ENV: "production"
          # Ghost CMS (using placeholder values for build)
          GHOST_API_URL: "https://demo.ghost.io"
          GHOST_CONTENT_API_KEY: "22444f78447824223cefc48062" # Demo key
          # Optional vars (not required for build)
          DATABASE_URL: ""
          NEXTAUTH_SECRET: ""
          NEXTAUTH_URL: ""
          RESEND_API_KEY: ""
          ADMIN_EMAIL: ""

      - name: Lint check
        run: npm run lint
        continue-on-error: true

      - name: Build Summary
        run: |
          echo "## Build Complete ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "To deploy to VPS, SSH into your server and run:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "cd /path/to/marcusgoll" >> $GITHUB_STEP_SUMMARY
          echo "./deploy.sh" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Server**: http://178.156.129.179:3000" >> $GITHUB_STEP_SUMMARY

  deploy:
    name: Deploy to Dokploy
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.build.result == 'success'

    steps:
      - name: Trigger Dokploy deployment
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.DOKPLOY_API_KEY }}" \
            -d '{"applicationId":"marcusgoll-nextjs-app"}' \
            "${{ secrets.DOKPLOY_WEBHOOK_URL }}/api/applications/deploy"
        continue-on-error: true

      - name: Deployment notification
        run: |
          echo "✅ Deployment triggered on Dokploy"
          echo "Application: marcusgoll-nextjs-app"
          echo "Environment: Production (test.marcusgoll.com)"
          echo "Status: Watch deployment at https://deploy.marcusgoll.com"

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()

    steps:
      - name: Check build status
        run: |
          if [ "${{ needs.build.result }}" != "success" ]; then
            echo "❌ Build failed. Check logs above."
            exit 1
          fi
          echo "✅ Build passed!"

      - name: Check deployment status
        run: |
          if [ "${{ needs.deploy.result }}" != "success" ]; then
            echo "⚠️  Deployment may have failed or is pending."
            echo "Check Dokploy dashboard: https://deploy.marcusgoll.com"
          else
            echo "✅ Deployment triggered successfully"
          fi
