// Prisma schema for self-hosted Supabase PostgreSQL
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Supabase uses connection pooling via Supavisor
  // Use direct URL for migrations: env("DIRECT_DATABASE_URL")
}

// Example model - customize based on your needs
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

// Newsletter subscriber model
model NewsletterSubscriber {
  id               String    @id @default(cuid())
  email            String    @unique
  active           Boolean   @default(true)
  subscribedAt     DateTime  @default(now())
  unsubscribedAt   DateTime?
  unsubscribeToken String    @unique @db.VarChar(64)
  source           String?   @db.VarChar(50)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  preferences NewsletterPreference[]

  @@index([email])
  @@index([active])
  @@index([unsubscribeToken])
  @@map("newsletter_subscribers")
}

// Newsletter preference model (which newsletters user wants)
model NewsletterPreference {
  id             String   @id @default(cuid())
  subscriberId   String
  newsletterType String   @db.VarChar(50) // aviation, dev-startup, education, all
  subscribed     Boolean  @default(true)
  updatedAt      DateTime @updatedAt
  createdAt      DateTime @default(now())

  subscriber NewsletterSubscriber @relation(fields: [subscriberId], references: [id], onDelete: Cascade)

  @@unique([subscriberId, newsletterType])
  @@index([subscriberId])
  @@index([newsletterType, subscribed])
  @@map("newsletter_preferences")
}
