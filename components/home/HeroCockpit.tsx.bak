'use client';

import { Button } from '@/components/ui/Button';
import Container from '@/components/ui/Container';
import Link from 'next/link';
import { motion, useInView } from 'framer-motion';
import { ArrowRight } from 'lucide-react';
import { useRef } from 'react';

/**
 * HeroCockpit - HUD-style with grid overlay
 * Concept: Aviation chart/cockpit instrumentation aesthetic
 * Personality: Professional, data-driven, technical precision
 */
export default function HeroCockpit() {
  const statsRef = useRef(null);
  const statsInView = useInView(statsRef, { once: true, amount: 0.3 });

  const textRevealVariants = {
    hidden: {
      clipPath: 'inset(0 100% 0 0)',
      opacity: 0,
    },
    visible: {
      clipPath: 'inset(0 0% 0 0)',
      opacity: 1,
      transition: {
        duration: 1.2,
        ease: [0.87, 0, 0.13, 1],
      },
    },
  };

  const underlineVariants = {
    hidden: { scaleX: 0, originX: 0 },
    visible: {
      scaleX: 1,
      transition: { duration: 0.8, delay: 0.5 },
    },
  };

  const bgNumberVariants = {
    hidden: { opacity: 0, scale: 0.8 },
    visible: {
      opacity: 0.05,
      scale: 1,
      transition: { duration: 1.5 },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: (i: number) => ({
      opacity: 1,
      y: 0,
      transition: {
        delay: i * 0.1 + 0.8,
        duration: 0.6,
      },
    }),
  };

  const statCardVariants = {
    hidden: { opacity: 0, y: 40, rotateX: 45 },
    visible: (i: number) => ({
      opacity: 1,
      y: 0,
      rotateX: 0,
      transition: {
        delay: i * 0.15,
        duration: 0.6,
      },
    }),
  };

  return (
    <section className="relative min-h-screen bg-white overflow-hidden">
      {/* Grid overlay */}
      <div
        className="absolute inset-0 opacity-10 pointer-events-none"
        style={{
          backgroundImage: `
            linear-gradient(rgb(5, 150, 105) 1px, transparent 1px),
            linear-gradient(90deg, rgb(5, 150, 105) 1px, transparent 1px)
          `,
          backgroundSize: '50px 50px',
        }}
      />

      {/* HUD corner labels */}
      <motion.div
        className="absolute top-8 left-8 font-mono text-xs text-emerald-600 z-10"
        initial={{ opacity: 1 }}
        whileInView={{ opacity: 0 }}
        viewport={{ amount: 0.5 }}
        transition={{ duration: 0.5 }}
      >
        39.7392° N, 104.9903° W
      </motion.div>

      <motion.div
        className="absolute top-8 right-8 font-mono text-xs text-emerald-600 z-10"
        initial={{ opacity: 1 }}
        whileInView={{ opacity: 0 }}
        viewport={{ amount: 0.5 }}
        transition={{ duration: 0.5 }}
      >
        ALT: 5,280 FT
      </motion.div>

      {/* Background giant numbers */}
      <motion.div
        variants={bgNumberVariants}
        initial="hidden"
        animate="visible"
        className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-[420px] font-bold text-navy-900 select-none pointer-events-none leading-none"
      >
        01
      </motion.div>

      {/* Main content */}
      <Container className="relative z-10 pt-32 pb-20">
        <div className="max-w-4xl mx-auto text-center">
          {/* Name with text reveal */}
          <motion.h1
            variants={textRevealVariants}
            initial="hidden"
            animate="visible"
            className="text-6xl lg:text-8xl xl:text-9xl font-semibold text-navy-900"
          >
            MARCUS GOLLAHON
          </motion.h1>

          {/* Animated underline */}
          <motion.div
            variants={underlineVariants}
            initial="hidden"
            animate="visible"
            className="h-1 w-64 mx-auto mt-6 bg-gradient-to-r from-emerald-600 to-teal-500"
          />

          {/* Tags */}
          <div className="flex gap-4 justify-center mt-12 flex-wrap">
            {['Aviation', 'Software', 'Education'].map((tag, i) => (
              <motion.span
                key={tag}
                custom={i}
                variants={itemVariants}
                initial="hidden"
                animate="visible"
                className="px-4 py-2 font-mono text-sm border-2 border-emerald-600 text-emerald-600 rounded hover:bg-emerald-50 transition-colors"
              >
                {tag}
              </motion.span>
            ))}
          </div>

          {/* Supporting text */}
          <motion.p
            custom={3}
            variants={itemVariants}
            initial="hidden"
            animate="visible"
            className="mt-8 text-lg lg:text-xl text-gray-600 max-w-2xl mx-auto"
          >
            Certified flight instructor and software engineer building CFiPros.
            Sharing insights from both cockpits and codebases.
          </motion.p>

          {/* CTA */}
          <motion.div
            custom={4}
            variants={itemVariants}
            initial="hidden"
            animate="visible"
            className="mt-12"
          >
            <Link href="/blog">
              <Button
                size="lg"
                className="bg-emerald-600 hover:bg-emerald-700 text-white px-8 py-6 text-lg font-semibold group shadow-lg hover:shadow-xl transition-all"
              >
                Read Articles
                <ArrowRight className="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform" />
              </Button>
            </Link>
          </motion.div>

          {/* Stat cards with 3D rotation */}
          <div
            ref={statsRef}
            className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mt-20"
          >
            {[
              { value: '1700+', label: 'Flight Hours', mono: true },
              { value: 'CFI/CFII', label: 'Certified Instructor', mono: true },
              { value: 'Next.js', label: '+ FastAPI Stack', mono: false },
            ].map((stat, i) => (
              <motion.div
                key={stat.label}
                custom={i}
                variants={statCardVariants}
                initial="hidden"
                animate={statsInView ? 'visible' : 'hidden'}
                className="bg-white border-2 border-emerald-600 p-8 rounded-lg shadow-lg hover:shadow-xl hover:border-emerald-700 transition-all group"
              >
                <div
                  className={`text-4xl font-bold text-navy-900 ${stat.mono ? 'font-mono' : ''} group-hover:text-emerald-600 transition-colors`}
                >
                  {stat.value}
                </div>
                <div className="text-sm text-gray-600 mt-2 uppercase tracking-wide">
                  {stat.label}
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </Container>

      {/* Bottom HUD elements */}
      <motion.div
        className="absolute bottom-8 left-8 font-mono text-xs text-gray-400"
        initial={{ opacity: 1 }}
        whileInView={{ opacity: 0 }}
        viewport={{ amount: 0.8 }}
        transition={{ duration: 0.5 }}
      >
        SYSTEM STATUS: OPERATIONAL
      </motion.div>
    </section>
  );
}
