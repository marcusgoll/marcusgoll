openapi: 3.0.0
info:
  title: Multi-Track Newsletter API
  version: 1.0.0
  description: |
    Newsletter subscription management API for marcusgoll.com
    Supports multi-track newsletter subscriptions (Aviation, Dev/Startup, Education, All)
    with token-based preference management and GDPR-compliant deletion.

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://marcusgoll.com/api
    description: Production server

paths:
  /newsletter/subscribe:
    post:
      summary: Subscribe to newsletters
      description: |
        Create new subscription or update existing subscriber's preferences.
        Upsert logic handles duplicate emails by updating preferences.
        Sends welcome email with preference management link.
      operationId: subscribeToNewsletter
      tags:
        - Newsletter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - newsletterTypes
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 255
                  example: "reader@example.com"
                  description: Subscriber email address (RFC 5322 format)
                newsletterTypes:
                  type: array
                  minItems: 1
                  maxItems: 4
                  items:
                    type: string
                    enum: [aviation, dev-startup, education, all]
                  example: ["aviation", "dev-startup"]
                  description: Newsletter types to subscribe to (at least 1 required)
                source:
                  type: string
                  maxLength: 50
                  nullable: true
                  example: "footer"
                  description: Signup source (footer, popup, post-cta) for analytics
      responses:
        '200':
          description: Subscription successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successfully subscribed to Aviation and Dev/Startup newsletters!"
                  unsubscribeToken:
                    type: string
                    format: hex
                    minLength: 64
                    maxLength: 64
                    example: "a3f5b8c7d2e1f4a6b9c8d7e6f5a4b3c2d1e0f9a8b7c6d5e4f3a2b1c0d9e8f7a6b5c4d3e2f1a0b9c8d7e6f5a4b3c2d1"
                    description: Secure token for preference management and unsubscribe
        '400':
          description: Bad request (validation failed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidEmail:
                  value:
                    success: false
                    message: "Invalid email format"
                    errors:
                      - field: "email"
                        message: "Must be valid RFC 5322 email address"
                noNewsletters:
                  value:
                    success: false
                    message: "At least one newsletter type required"
                    errors:
                      - field: "newsletterTypes"
                        message: "Array must contain at least 1 item"
        '429':
          description: Too many requests (rate limit exceeded)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Too many requests. Please try again in 60 seconds."
                retryAfter: 60
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Failed to process subscription. Please try again later."

  /newsletter/preferences/{token}:
    get:
      summary: Get newsletter preferences
      description: |
        Retrieve current newsletter preferences for a subscriber.
        Used by preference management page to display current selections.
      operationId: getNewsletterPreferences
      tags:
        - Newsletter
      parameters:
        - name: token
          in: path
          required: true
          description: 64-character hex unsubscribe token
          schema:
            type: string
            format: hex
            minLength: 64
            maxLength: 64
            example: "a3f5b8c7d2e1f4a6b9c8d7e6f5a4b3c2d1e0f9a8b7c6d5e4f3a2b1c0d9e8f7a6b5c4d3e2f1a0b9c8d7e6f5a4b3c2d1"
      responses:
        '200':
          description: Preferences retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  email:
                    type: string
                    format: email
                    example: "reader@example.com"
                    description: Subscriber email (read-only)
                  preferences:
                    type: object
                    properties:
                      aviation:
                        type: boolean
                        example: true
                      dev-startup:
                        type: boolean
                        example: true
                      education:
                        type: boolean
                        example: false
                      all:
                        type: boolean
                        example: false
                    description: Current newsletter subscriptions
                  subscribedAt:
                    type: string
                    format: date-time
                    example: "2025-10-28T12:00:00.000Z"
                    description: Initial subscription date (ISO 8601)
        '404':
          description: Token not found or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Subscriber not found or invalid token"
        '429':
          description: Too many requests (rate limit exceeded)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /newsletter/preferences:
    patch:
      summary: Update newsletter preferences
      description: |
        Update which newsletters a subscriber wants to receive.
        At least one newsletter must remain selected.
        Sends confirmation email after successful update.
      operationId: updateNewsletterPreferences
      tags:
        - Newsletter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - preferences
              properties:
                token:
                  type: string
                  format: hex
                  minLength: 64
                  maxLength: 64
                  example: "a3f5b8c7d2e1f4a6b9c8d7e6f5a4b3c2d1e0f9a8b7c6d5e4f3a2b1c0d9e8f7a6b5c4d3e2f1a0b9c8d7e6f5a4b3c2d1"
                  description: 64-character hex unsubscribe token
                preferences:
                  type: object
                  properties:
                    aviation:
                      type: boolean
                      example: false
                    dev-startup:
                      type: boolean
                      example: true
                    education:
                      type: boolean
                      example: true
                    all:
                      type: boolean
                      example: false
                  description: Updated newsletter subscriptions (at least 1 must be true)
      responses:
        '200':
          description: Preferences updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Preferences updated successfully"
        '400':
          description: Bad request (validation failed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "At least one newsletter must be selected"
                errors:
                  - field: "preferences"
                    message: "Cannot unsubscribe from all newsletters via preferences page. Use unsubscribe link instead."
        '404':
          description: Token not found or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests (rate limit exceeded)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /newsletter/unsubscribe:
    delete:
      summary: Unsubscribe from all newsletters
      description: |
        Unsubscribe from all newsletters (soft delete by default).
        If hardDelete=true, permanently delete subscriber record (GDPR compliance).
        Sends goodbye email after successful unsubscribe.
      operationId: unsubscribeFromNewsletters
      tags:
        - Newsletter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  format: hex
                  minLength: 64
                  maxLength: 64
                  example: "a3f5b8c7d2e1f4a6b9c8d7e6f5a4b3c2d1e0f9a8b7c6d5e4f3a2b1c0d9e8f7a6b5c4d3e2f1a0b9c8d7e6f5a4b3c2d1"
                  description: 64-character hex unsubscribe token
                hardDelete:
                  type: boolean
                  default: false
                  example: false
                  description: If true, permanently delete subscriber record (GDPR right to deletion)
      responses:
        '200':
          description: Unsubscribe successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successfully unsubscribed from all newsletters"
        '404':
          description: Token not found or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests (rate limit exceeded)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error message"
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: "email"
              message:
                type: string
                example: "Invalid format"
        retryAfter:
          type: integer
          description: Seconds to wait before retrying (rate limit only)
          example: 60

tags:
  - name: Newsletter
    description: Newsletter subscription management endpoints